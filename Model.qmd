---
title: "Model"
format:
  html:
    code-fold: true
---

```{r}
install.packages("reticulate")
renv::snapshot()
```

```{r}
library(reticulate)
use_virtualenv("C:/Users/C25Swayam.Singh/Documents/.virtualenvs/myenv", required = TRUE)
py_config()
py_run_string("import sklearn")
install.packages("palmerpenguins")
import("numpy")
import("sklearn.linear_model")
import("sklearn")


library(palmerpenguins)
```

```{r}
renv::status()
renv::snapshot()
```

```{python}
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
```

```{python}
df = penguins.load_penguins().dropna()

df.head(3)
```

## Define Model and Fit

```{python}
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']

model = LinearRegression().fit(X, y)
```

## Get some information

```{python}
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
```

```{python}
# Import necessary libraries
import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from vetiver import vetiver_model, vetiver_pin_write
from pins import board_folder
```

## Get Data

```{python}
from palmerpenguins import load_penguins
import duckdb

df_penguins = load_penguins()

con = duckdb.connect(database=':memory:')  

con.register('penguins', df_penguins)

df_result = con.execute("SELECT * FROM penguins").fetchdf()

con.close()

print(df_result.head(3))

```

## Define Model and Fit

```{python}
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']

model = LinearRegression().fit(X, y)
```

## Get some information

```{python}
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
```

## Turn into Vetiver Model

```{python}
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
```

## Save to Board

```{python}
from vetiver import vetiver_pin_write
from pins import board_folder

v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
model_board = board_folder("/data/model", allow_pickle_read=True)
vetiver_pin_write(model_board, v)
```

```{r}
library(reticulate)
use_virtualenv("C:/Users/C25Swayam.Singh/Documents/.virtualenvs/myenv", required = TRUE)
py_config()
#from vetiver import vetiver_model_card

# Assuming 'v' is your VetiverModel object
#vetiver_model_card(v, output_file="penguin_model_card.qmd")
```

```{r}
py_run_string("import fastapi")
```

```{r}
py_run_string("from vetiver import VetiverAPI")
py_run_string("app = VetiverAPI(v, check_prototype = True)")
```
